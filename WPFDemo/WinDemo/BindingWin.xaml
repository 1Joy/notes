<Window x:Class="WinDemo.BindingWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WinDemo"
        mc:Ignorable="d"
        Title="BindingWin" Height="450" Width="800">
    <Window.Resources>
        <local:BindModelConverter x:Key="converter1"/>
        <local:GenderConverter x:Key="converter2"/>
        <local:ValueMultiConverter x:Key="ValueMultiConverter"/>
    </Window.Resources>
    <Window.DataContext>
        <local:BindingWinViewModel/>
    </Window.DataContext>
    <StackPanel>
        <ItemsControl ItemsSource="{Binding ListValue}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <WrapPanel>
                        <TextBlock Text="{Binding Value}"/>
                        <TextBlock Text="{Binding Path=DataContext.BM1.Value,
                            RelativeSource={RelativeSource AncestorType=Window,
                            Mode=FindAncestor}}"/>

                    </WrapPanel>

                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <TextBox x:Name="tb" Text="{Binding BM1.Value,UpdateSourceTrigger=Explicit}"/>
        <TextBlock x:Name="tb1" Text="{Binding BM1.Value,Mode=OneWay}"/>
        <TextBlock x:Name="tb2" Text="{Binding BM1.Value}"
                   Foreground="{Binding BM1.Value,Converter={StaticResource converter1}}"/>
        <Button Content="button" Click="Button_Click"/>

        <RadioButton Content="男" IsChecked="{Binding BM1.Gender,Converter={StaticResource converter2}
            ,ConverterParameter=1}"/>
        <RadioButton Content="女" IsChecked="{Binding BM1.Gender,Converter={StaticResource converter2}
            ,ConverterParameter=2}"/>

        <!--保留两位小数，#表示不限制数字-->
        <TextBlock Text="{Binding BM1.Value,StringFormat={}{0:#.00}}"/>
        <TextBlock Text="{Binding BM1.Value,StringFormat={}{0:f2}}"/>
        
        <TextBlock Text="{Binding Time,StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}"/>
        <TextBlock Text="{Binding Time,StringFormat=\{0:yyyy-MM-dd HH:mm:ss\}}"/>
        <TextBlock Text="{Binding Time,StringFormat=时间：{0:yyyy-MM-dd HH:mm:ss}}"/>
        
        
        <TextBlock Text="{Binding Tim,StringFormat=时间：{0:yyyy-MM-dd HH:mm:ss}
            ,FallbackValue=00}"/>
        <TextBlock Text="{Binding Time,StringFormat=时间：{0:yyyy-MM-dd HH:mm:ss}
            ,FallbackValue=00,TargetNullValue=123}"/>


        <TextBox x:Name="tb3" >
            <TextBox.Text>
                <Binding Path="Value11" UpdateSourceTrigger="PropertyChanged">
                    <!--设置数据验证规则-->
                    <Binding.ValidationRules>
                        <!--<ExceptionValidationRule/>-->
                        <local:ValidationTest/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <!--获取某个控件的验证异常信息-->
        <TextBlock Text="{Binding Path=(Validation.Errors)[0].ErrorContent,
            ElementName=tb3}"/>

        <TextBox x:Name="tb4" Text="{Binding BM1.Value22,UpdateSourceTrigger=PropertyChanged,
            ValidatesOnDataErrors=True}"/>
        <!--获取某个控件的验证异常信息-->
        <TextBlock Text="{Binding Path=(Validation.Errors)[0].ErrorContent,
            ElementName=tb4}"/>

        <Button Content="button" Click="Button_Click_1"/>

        <TextBlock>
            <TextBlock.Text>
                <MultiBinding StringFormat="{}{0}--{1}">
                    <Binding Path="Value2"/>
                    <Binding Path="Value3"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>

        <TextBlock>
            <TextBlock.Text>
                <MultiBinding Converter="{StaticResource ValueMultiConverter}">
                    <Binding Path="Value2"/>
                    <Binding Path="Value3"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>

        <TextBox>
            <PriorityBinding FallbackValue="正在获取数据.....">
                <!--显示顺序：正在获取数据->Value3的值->value2的值-->
                <Binding Path="Value2" IsAsync="True"/>
                <Binding Path="Value3" IsAsync="True"/>
            </PriorityBinding>
        </TextBox>
    </StackPanel>
</Window>
